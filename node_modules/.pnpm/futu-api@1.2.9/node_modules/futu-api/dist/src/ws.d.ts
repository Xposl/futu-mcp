import './utils/object';
import { FutuConfig } from './futu';
import Proto from './proto/proto';
import ProtoId from './proto/protoid.json';
import PushEmitter from './push_emitter';
import { valueof } from './types/ts';
import { OnPushListener } from './types/types';
export default class WebSocket extends PushEmitter {
    private config;
    private callback;
    private ws;
    private locks;
    private onPushListeners;
    private connID;
    protected header: Proto.Trd_Common.ITrdHeader | undefined;
    private reconnectTimer;
    private isLoggedIn;
    private exitFlag;
    private reqId;
    private initPromise;
    constructor(config: FutuConfig, callback: () => void);
    protected get ready(): Promise<void>;
    protected addOnPushListener<T>(cmdOrName: valueof<typeof ProtoId> | keyof (typeof ProtoId), security: Proto.Qot_Common.Security, listener: OnPushListener<T>): void;
    private setup;
    close(): void;
    private sendCmd;
    protected request(name: keyof (typeof ProtoId), req?: any): Promise<any>;
    private _request;
    private onOpen;
    private onError;
    private onClose;
    private _onPush;
    private releaseLock;
    private pack;
    private unpack;
    private clean;
}
